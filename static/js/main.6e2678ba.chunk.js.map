{"version":3,"sources":["components/StarRating.jsx","contexts/PlacesProvider.jsx","components/Place.jsx","components/PlacesList.jsx","pages/Places.jsx","contexts/TransactionsProvider.jsx","components/LabelInput.jsx","components/LabelSelect.jsx","pages/TransactionForm.jsx","components/Transaction.jsx","components/TransactionList.jsx","pages/Transactions.jsx","App.js","reportWebVitals.js","index.js"],"names":["Star","memo","index","selected","onSelect","f","handleSelect","useCallback","color","className","onClick","StarRating","totalStars","selectedStars","onRate","stars","useMemo","Array","map","_","i","PlacesContext","createContext","usePlaces","useContext","PlacesProvider","children","useState","initialLoad","setInitialLoad","currentPlace","setCurrentPlace","error","setError","loading","setLoading","places","setPlaces","refreshPlaces","a","axios","get","config","base_url","data","useEffect","createOrUpdatePlace","id","name","rating","method","url","changedPlace","console","ratePlace","place","find","p","deletePlace","value","Provider","Place","handleRate","newRating","PlacesList","sort","b","toUpperCase","localeCompare","Places","TransactionsContext","TransactionsProvider","transactions","setTransactions","currentTransaction","setCurrentTransaction","refreshTransactions","createOrUpdateTransaction","placeId","amount","date","user","changedTransaction","log","deleteTransaction","setTransactionToUpdate","t","LabelInput","label","type","defaultValue","validation","rest","useFormContext","register","errors","formState","htmlFor","placeholder","message","LabelSelect","options","validationRules","required","minLength","valueAsNumber","min","max","toDateInputString","Object","Date","asString","toISOString","substring","indexOf","TransactionForm","useParams","history","useHistory","methods","useForm","handleSubmit","reset","setValue","keys","length","constructor","dateAsString","onSubmit","push","to","Transaction","handleRemove","toLocaleDateString","day","month","year","TransactionList","search","filteredTransactions","filter","toLowerCase","includes","JSON","stringify","trans","Transactions","text","setText","setSearch","handleInputChange","e","target","handleSearch","onChange","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e2678ba.chunk.js","sourcesContent":["import { memo, useCallback, useMemo } from 'react';\nimport { IoStarSharp } from 'react-icons/io5';\n\nconst Star = memo(({\n  index,\n  selected = false,\n  onSelect = (f) => f\n}) => {\n  const handleSelect = useCallback(() => onSelect(index + 1), [index, onSelect]);\n  return (\n    <IoStarSharp\n      color={selected ? 'yellow' : 'grey'}\n      className=\"inline-block\"\n      onClick={handleSelect}\n    />\n  );\n});\n\nexport default function StarRating({ totalStars = 5, selectedStars = 0, onRate }) {\n  const stars = useMemo(() => [...new Array(totalStars)], [totalStars]);\n  return (\n    <>\n      {stars.map((_, i) => (\n        <Star key={i} index={i} selected={selectedStars > i} onSelect={onRate} />\n      ))}\n      <p className=\"text-xs text-gray-700\">\n        {selectedStars} of {totalStars} stars\n      </p>\n    </>\n  );\n}\n","import {\n    createContext,\n    useState,\n    useEffect,\n    useCallback,\n    useContext,\n    useMemo\n  } from 'react';\n  import axios from 'axios';\n  import config from '../config.json';\n\n  export const PlacesContext = createContext();\n  export const usePlaces = () => useContext(PlacesContext);\n\n  export const PlacesProvider = ({\n    children\n  }) => {\n    const [initialLoad, setInitialLoad] = useState(false);\n    const [currentPlace, setCurrentPlace] = useState({});\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(false);\n    const [places, setPlaces] = useState([]);\n\n    const refreshPlaces = useCallback(async () => {\n      try {\n        setError();\n        setLoading(true);\n        const {\n          data\n        } = await axios.get(`${config.base_url}places`);\n        setPlaces(data.data);\n        return data.data;\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false)\n      }\n\n    }, []);\n\n    useEffect(() => {\n      if (!initialLoad) {\n        refreshPlaces();\n        setInitialLoad(true);\n      }\n    }, [initialLoad, refreshPlaces]);\n\n    const createOrUpdatePlace = useCallback(async ({\n      id,\n      name,\n      rating\n    }) => {\n      setError();\n      setLoading(true);\n      let data = {\n        name,\n        rating\n      };\n      let method = id ? 'put' : 'post';\n      let url = `${config.base_url}places/${id ?? ''}`;\n      try {\n        const {\n          changedPlace\n        } = await axios({\n          method,\n          url,\n          data,\n        });\n        await refreshPlaces();\n        return changedPlace;\n      } catch (error) {\n        console.error(error);\n        throw error;\n      } finally {\n        setLoading(false)\n      }\n    }, [refreshPlaces]);\n\n    const ratePlace = useCallback(async (id, rating) => {\n        const place = places.find((p) => p.id === id);\n        return await createOrUpdatePlace({ ...place, rating });\n      }, [places, createOrUpdatePlace]);\n\n    const deletePlace = useCallback(async (id) => {\n      setLoading(true);\n      setError();\n      try {\n        const {\n          data\n        } = await axios({\n          method: 'delete',\n          url: `${config.base_url}places/${id}`,\n        });\n        refreshPlaces();\n        return data;\n      } catch (error) {\n        console.error(error);\n        throw error;\n      } finally {\n        setLoading(false)\n      }\n    }, [refreshPlaces]);\n\n    const value = useMemo(() => ({\n      currentPlace,\n      setCurrentPlace,\n      places,\n      error,\n      loading,\n      ratePlace,\n      deletePlace,\n      createOrUpdatePlace,\n    }), [places, error, loading, setCurrentPlace, ratePlace, deletePlace, currentPlace, createOrUpdatePlace])\n\n    return (\n      <PlacesContext.Provider value={value}>\n        {children}\n      </PlacesContext.Provider>\n    );\n  };\n","import { memo, useCallback } from 'react';\nimport StarRating from './StarRating';\nimport { usePlaces } from '../contexts/PlacesProvider';\n\nconst Place = memo(({ id, name, rating }) => {\n\tconst { ratePlace } = usePlaces();\n\n\tconst handleRate = useCallback((newRating) => {\n\t\tratePlace(id, newRating);\n\t}, [ratePlace, id]);\n\n\treturn (\n\t\t<div\n\t\t\tdata-cy=\"place\"\n\t\t\tclassName=\"bg-white px-4 py-5 border-2 border-gray-400 rounded m-2 text-center\"\n\t\t>\n\t\t\t<h2 className=\"mt-2 mb-2 font-bold\">{name}</h2>\n\t\t\t<StarRating\n\t\t\t\tselectedStars={rating}\n\t\t\t\tonRate={handleRate}\n\t\t\t/>\n\t\t</div>\n\t);\n});\n\nexport default Place;\n","import Place from './Place';\n\nexport default function PlacesList({ places }) {\n\treturn (\n\t\t<div className=\"flex flex-wrap\">\n\t\t\t{places\n\t\t\t\t.sort((a, b) =>\n\t\t\t\t\ta.name.toUpperCase().localeCompare(b.name.toUpperCase())\n\t\t\t\t)\n\t\t\t\t.map((p) => (\n\t\t\t\t\t<Place key={p.id} {...p} />\n\t\t\t\t))}\n\t\t</div>\n\t);\n}\n","import PlacesList from '../components/PlacesList';\nimport { usePlaces } from '../contexts/PlacesProvider';\n\nexport default function Places() {\n  const { places } = usePlaces();\n  return (\n    <>\n      <h1>Places</h1>\n\n      <PlacesList places={places} />\n    </>\n  )\n}\n","import {\n  createContext,\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  useContext,\n} from \"react\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\n\nexport const TransactionsContext = createContext();\nexport const useTransactions = () => useContext(TransactionsContext);\n\nexport const TransactionsProvider = ({ children }) => {\n  const [initialLoad, setInitialLoad] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [currentTransaction, setCurrentTransaction] = useState({});\n\n  const refreshTransactions = useCallback(async () => {\n    try {\n      setError();\n      setLoading(true);\n      const { data } = await axios.get(\n        `${config.base_url}transactions?limit=25&offset=0`\n      );\n      setTransactions(data.data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!initialLoad) {\n      refreshTransactions();\n      setInitialLoad(true);\n    }\n  }, [initialLoad, refreshTransactions]);\n\n  const createOrUpdateTransaction = useCallback(\n    async ({ id, placeId, amount, date, user }) => {\n      setError();\n      setLoading(true);\n      let data = {\n        placeId,\n        amount,\n        date,\n        user,\n      };\n      let method = id ? \"put\" : \"post\";\n      let url = `${config.base_url}transactions/${id ?? \"\"}`;\n      try {\n        const { changedTransaction } = await axios({\n          method,\n          url,\n          data,\n        });\n        await refreshTransactions();\n        return changedTransaction;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [refreshTransactions]\n  );\n\n  const deleteTransaction = useCallback(\n    async (id) => {\n      try {\n        setError();\n        setLoading(true);\n        const { data } = await axios({\n          method: \"delete\",\n          url: `${config.base_url}transactions/${id}`,\n        });\n        refreshTransactions();\n        return data;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    },\n    [refreshTransactions]\n  );\n\n  const setTransactionToUpdate = useCallback(\n    (id) => {\n      setCurrentTransaction(\n        id === null ? {} : transactions.find((t) => t.id === id)\n      );\n    },\n    [transactions]\n  );\n\n  const value = useMemo(\n    () => ({\n      transactions,\n      error,\n      loading,\n      currentTransaction,\n      createOrUpdateTransaction,\n      deleteTransaction,\n      setTransactionToUpdate,\n    }),\n    [\n      transactions,\n      error,\n      loading,\n      currentTransaction,\n      createOrUpdateTransaction,\n      deleteTransaction,\n      setTransactionToUpdate,\n    ]\n  );\n\n  return (\n    <TransactionsContext.Provider value={value}>\n      {children}\n    </TransactionsContext.Provider>\n  );\n};\n","import { useFormContext } from \"react-hook-form\";\n\nconst LabelInput = ({ label, type, defaultValue, validation, ...rest }) => {\n  const { register, formState: { errors } } = useFormContext();\n  return (\n    <div className=\"col-span-6 sm:col-span-3\">\n      <label htmlFor={label}>{label}</label>\n      <input\n        {...register(label, validation)}\n        defaultValue={defaultValue}\n        placeholder={label}\n        type={type}\n        id={label}\n        name={label}\n        {...rest}\n      />\n      {errors[label] && (\n        <p data-cy=\"labelinput-error\" className=\"text-red-500\">\n          {errors[label].message}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default LabelInput;\n","import { useFormContext } from 'react-hook-form';\n\nconst LabelSelect = ({label, options, validation, ...rest}) => {\n  const { register, formState: { errors } } = useFormContext();\n  return (\n    <div className=\"col-span-6 sm:col-span-3\">\n      <label htmlFor={label}>{label}</label>\n      <select\n        {...register(label, validation)}\n        {...rest}\n        id={label}\n        name={label}>\n        <option value=\"\">--choose a {label}--</option>\n        {options.map((value) => (\n          <option key={value.id} value={value.id}>\n            {value.name}\n          </option>\n        ))}\n      </select>\n      {errors[label] && <p className=\"text-red-500\">{errors[label].message}</p>}\n    </div>\n  );\n};\n\nexport default LabelSelect;\n","import { useContext, useEffect, useCallback } from \"react\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { useTransactions } from \"../contexts/TransactionsProvider\";\nimport { PlacesContext } from \"../contexts/PlacesProvider\";\nimport LabelInput from \"../components/LabelInput\";\nimport LabelSelect from \"../components/LabelSelect\";\n\nconst validationRules = {\n  user: {\n    required: \"this is required\",\n    minLength: { value: 2, message: \"Min length is 2\" },\n  },\n  date: { required: \"this is required\" },\n  place: { required: \"this is required\" },\n  amount: {\n    valueAsNumber: true,\n    required: \"this is required\",\n    min: { value: 1, message: \"min 1\" },\n    max: { value: 5000, message: \"max 5000\" },\n  },\n};\n\nconst toDateInputString = (date) => {\n  // (toISOString returns something like 2020-12-05T14:15:74Z,\n  // date HTML5 input elements expect 2020-12-05\n  //\n  if (!date) return null;\n  if (typeof date !== Object) {\n    date = new Date(date);\n  }\n  const asString = date.toISOString();\n  return asString.substring(0, asString.indexOf(\"T\"));\n};\n\nexport default function TransactionForm() {\n  const { id } = useParams();\n  const history = useHistory();\n  const methods = useForm();\n  const {\n    handleSubmit,\n    reset,\n    setValue,\n  } = methods;\n\n  const {\n    currentTransaction,\n    setTransactionToUpdate,\n    createOrUpdateTransaction,\n  } = useTransactions();\n\n  const { places } = useContext(PlacesContext);\n\n  useEffect(() => {\n    if (\n      // check on non-empty object\n      currentTransaction &&\n      (Object.keys(currentTransaction).length !== 0 ||\n        currentTransaction.constructor !== Object)\n    ) {\n      const dateAsString = toDateInputString(new Date(currentTransaction.date));\n      setValue(\"date\", dateAsString);\n      setValue(\"user\", currentTransaction.user.name);\n      setValue(\"place\", currentTransaction.place.id);\n      setValue(\"amount\", currentTransaction.amount);\n    } else {\n      reset();\n    }\n  }, [currentTransaction, setValue, reset]);\n\n  useEffect(() => {\n    console.log(\"id\", id);\n    setTransactionToUpdate(id);\n  }, [id, setTransactionToUpdate]);\n\n  const onSubmit = useCallback(\n    async (data) => {\n      try {\n        await createOrUpdateTransaction({\n          id: currentTransaction?.id,\n          placeId: data.place,\n          amount: data.amount,\n          date: new Date(data.date),\n          user: data.user,\n        });\n        setTransactionToUpdate(null);\n        history.push(\"/transactions\");\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    [\n      createOrUpdateTransaction,\n      currentTransaction?.id,\n      setTransactionToUpdate,\n      history,\n    ]\n  );\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(onSubmit)} className=\"m-5\">\n        <div className=\"grid grid-cols-6 gap-6\">\n          <LabelInput\n            label=\"user\"\n            type=\"text\"\n            defaultValue=\"\"\n            validation={validationRules.user}\n            data-cy=\"user_input\"\n          />\n          <LabelInput\n            label=\"date\"\n            type=\"date\"\n            defaultValue={toDateInputString(new Date())}\n            validation={validationRules.date}\n            data-cy=\"date_input\"\n          />\n          <LabelSelect\n            label=\"place\"\n            options={places}\n            validation={validationRules.place}\n            data-cy=\"place_input\"\n          />\n          <LabelInput\n            label=\"amount\"\n            type=\"number\"\n            defaultValue=\"0\"\n            validation={validationRules.amount}\n            data-cy=\"amount_input\"\n          />\n          <div className=\"col-span-12 sm:col-span-6\">\n            <div className=\"flex justify-end\">\n              <button type=\"submit\" data-cy=\"submit_transaction\">\n                {currentTransaction?.id\n                  ? \"Save transaction\"\n                  : \"Add transaction\"}\n              </button>\n              <Link className=\"button\" to=\"/transactions\">\n                Cancel\n              </Link>\n            </div>\n          </div>\n        </div>\n      </form>\n    </FormProvider>\n  );\n}\n","import { memo, useCallback, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IoTrashOutline, IoPencil } from \"react-icons/io5\";\nimport { TransactionsContext } from \"../contexts/TransactionsProvider\";\n\nconst Transaction = memo(({ id, date, amount, user, place }) => {\n  const { deleteTransaction } = useContext(TransactionsContext);\n\n  const handleRemove = useCallback(() => {\n    deleteTransaction(id);\n  }, [deleteTransaction, id]);\n\n  return (\n    <tr data-cy=\"transaction\">\n      <td data-cy=\"transaction_date\" className=\"border w-1/4 px-4 py-2\">\n        {new Date(date).toLocaleDateString(\"nl-BE\", {\n          day: \"2-digit\",\n          month: \"2-digit\",\n          year: \"numeric\",\n        })}\n      </td>\n      <td data-cy=\"transaction_user\" className=\"border w-1/4 px-4 py-2\">\n        {user.name}\n      </td>\n      <td data-cy=\"transaction_place\" className=\"border w-1/4 px-4 py-2\">\n        {place.name}\n      </td>\n      <td data-cy=\"transaction_amount\" className=\"border w-1/4 px-4 py-2\">\n        {amount} &euro;\n      </td>\n      <td className=\"border w-1/4 px-4 py-2\">\n        <div className=\"flex flex-row space-x-2\">\n          <Link\n            className=\"button\"\n            data-cy=\"transaction_edit_btn\"\n            to={`/transactions/edit/${id}`}\n          >\n            <IoPencil />\n          </Link>\n          <button\n            data-cy=\"transaction_remove_btn\"\n            onClick={handleRemove}\n          >\n            <IoTrashOutline />\n          </button>\n        </div>\n      </td>\n    </tr>\n  );\n});\n\nexport default Transaction;\n","import React, { useContext, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TransactionsContext } from \"../contexts/TransactionsProvider\";\nimport Transaction from \"./Transaction\";\n\nexport default function TransactionList({ search }) {\n  const { transactions, error, loading } = useContext(TransactionsContext);\n\n  const filteredTransactions = useMemo(() => {\n    return transactions.filter((t) => {\n      return t.place.name.toLowerCase().includes(search.toLowerCase());\n    });\n  }, [transactions, search]);\n\n  if (loading) return <h1 data-cy=\"loading\">Loading...</h1>;\n  if (error)\n    return (\n      <p data-cy=\"transactions_error\" className=\"error\">\n        {JSON.stringify(error, null, 2)}\n      </p>\n    );\n  if (!transactions || !transactions.length) {\n    return (\n      <p className=\"info flex flex-row items-center\">\n        <span className=\"flex-1\">There are no transactions</span>\n\n        <Link to=\"add\" className=\"button\">\n          Create one\n        </Link>\n      </p>\n    );\n  }\n\n  return (\n    <table className=\"table-fixed m-auto\">\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>User</th>\n          <th>What?</th>\n          <th>Amount</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredTransactions.map((trans) => {\n          return <Transaction key={trans.id} {...trans} />;\n        })}\n      </tbody>\n    </table>\n  );\n}\n","import { useState, useCallback } from \"react\";\nimport { IoAdd } from \"react-icons/io5\";\nimport { Link } from \"react-router-dom\";\nimport TransactionList from \"../components/TransactionList\";\n\nexport default function Transactions() {\n  const [text, setText] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n\n  const handleInputChange = useCallback((e) => setText(e.target.value), []);\n  const handleSearch = useCallback(() => setSearch(text), [text]);\n\n  return (\n    <>\n      <h1>Transactions</h1>\n      <div className=\"flex my-4\">\n        <input\n          data-cy=\"transactions_search_input\"\n          type=\"search\"\n          value={text}\n          onChange={handleInputChange}\n          className=\"flex-1\"\n          placeholder=\"Search for a transaction\"\n        />\n        <button\n          type=\"button\"\n          data-cy=\"transactions_search_btn\"\n          onClick={handleSearch}\n        >\n          Search\n        </button>\n      </div>\n\n      <div className=\"flex justify-end my-2\">\n        <Link\n          className=\"button flex flex-row items-center\"\n          to=\"/transactions/add\"\n        >\n          <IoAdd /> New transaction\n        </Link>\n      </div>\n      <TransactionList search={search} />\n    </>\n  );\n}\n","import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Places from \"./pages/Places\";\nimport { TransactionsProvider } from \"./contexts/TransactionsProvider\";\nimport TransactionForm from \"./pages/TransactionForm\";\nimport Transactions from \"./pages/Transactions\";\nimport { PlacesProvider } from \"./contexts/PlacesProvider\";\n\nfunction App() {\n    return (\n      <PlacesProvider>\n        <TransactionsProvider>\n          <Router>\n            <Switch>\n              <Route path=\"/\" exact>\n                <Redirect to=\"/transactions\" />\n              </Route>\n\n              <Route path=\"/transactions\" exact>\n                <Transactions />\n              </Route>\n\n              <Route path=\"/transactions/add\" exact>\n                <TransactionForm />\n              </Route>\n\n              <Route path=\"/transactions/edit/:id\" exact>\n                <TransactionForm />\n              </Route>\n\n              <Route path=\"/places\">\n                <Places />\n              </Route>\n            </Switch>\n          </Router>\n        </TransactionsProvider>\n      </PlacesProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}